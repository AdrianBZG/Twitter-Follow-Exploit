/*
 * Copyright - Adrian Rodriguez Bazaga (GitHub: AdrianBZG)
 * Licensed under Apache 2.0
 */

package logic;

import java.io.File;
import java.io.IOException;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxBinary;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxProfile;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import core.DataCache;
import core.TwitterData;
import core.UINamesData;
import randomfactory.HTTPRequestFactory;

public class MainTorVPN {
  public static final String TOR_ROOT_PATH = "YOUR_PATH_TO_TOR_FOLDER";
  public static final String TOR_EXE_PATH = TOR_ROOT_PATH + "Tor Browser\\Browser\\firefox.exe";
  public static final String TOR_PROFILE_PATH = TOR_ROOT_PATH + "Tor Browser\\Browser\\TorBrowser\\Data\\Browser\\profile.default";
  public static String DEFAULT_USER_PASSWORD = "great123456789pass";

  public static void main(String[] args) {    
    int randomNum = 0 + (int)(Math.random() * 3);
    DataCache.newUserCreated(HTTPRequestFactory.performRequestInBackground(UINamesData.QUERIES_BY_REGION.get(randomNum)));

    // Tor configuration
    File torProfileDir = new File(TOR_PROFILE_PATH);                
    FirefoxBinary binary = new FirefoxBinary(new File(TOR_EXE_PATH));
    FirefoxProfile torProfile = new FirefoxProfile(torProfileDir);
    torProfile.setPreference("webdriver.load.strategy", "unstable");
    try {
      binary.startProfile(torProfile, torProfileDir, "");
    } catch (IOException e) {
      e.printStackTrace();
    }
    FirefoxProfile profile = new FirefoxProfile();
    profile.setPreference("network.proxy.type", 1);
    profile.setPreference("network.proxy.socks", "127.0.0.1");
    profile.setPreference("network.proxy.socks_port", 9150);
    profile.setPreference("network.proxy.socks_version", 5);
    profile.setPreference("places.history.enabled", false);
    profile.setPreference("privacy.clearOnShutdown.offlineApps", true);
    profile.setPreference("privacy.clearOnShutdown.passwords", true);
    profile.setPreference("privacy.clearOnShutdown.siteSettings", true);
    profile.setPreference("privacy.sanitize.sanitizeOnShutdown", true);
    profile.setPreference("signon.rememberSignons", false);
    profile.setPreference("network.cookie.lifetimePolicy", 2);
    profile.setPreference("network.dns.disablePrefetch", true);
    profile.setPreference("network.http.sendRefererHeader", 0);
    profile.setPreference("network.proxy.socks_remote_dns", true);
    FirefoxDriver driver = new FirefoxDriver(profile);
    //

    driver.get(TwitterData.TWITTER_REG_URL);

    WebDriverWait wait = new WebDriverWait(driver, 10);
    WebElement element = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("full-name")));

    driver.findElement(By.id("full-name")).sendKeys(DataCache.lastResponseObject.getName() + " " + DataCache.lastResponseObject.getSurname());
    driver.findElement(By.id("email")).sendKeys(DataCache.lastResponseObject.getEmail());
    try {
      Thread.sleep(1000);
    } catch (InterruptedException e1) {
      e1.printStackTrace();
    }
    driver.findElement(By.id("password")).sendKeys(DEFAULT_USER_PASSWORD);

    driver.findElement(By.id("submit_button")).click();

    try {
      Thread.sleep(1000);
    } catch (InterruptedException e) {
      e.printStackTrace();
    }

    driver.get(TwitterData.TWITTER_STEP2_REG_URL);

    WebElement element2 = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("username")));

    randomNum = 1 + (int)(Math.random() * 50);
    driver.findElement(By.id("username")).sendKeys(DataCache.lastResponseObject.getName().toLowerCase() + DataCache.lastResponseObject.getSurname().toLowerCase() + randomNum);

    driver.findElement(By.id("submit_button")).click();

    try {
      Thread.sleep(1000);
    } catch (InterruptedException e) {
      e.printStackTrace();
    }

    driver.get(TwitterData.TWITTER_BASE_URL + TwitterData.TWITTER_USER_TO_FOLLOW);

    WebElement element3 = wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//li[contains(@class, 'follow-button')]/li[1]/a")));

    driver.findElement(By.xpath("//li[contains(@class, 'follow-button')]/li[1]/a")).click();

    try {
      Thread.sleep(1000);
    } catch (InterruptedException e) {
      e.printStackTrace();
    }

    //Tidy up now.
    driver.quit();
  }
}
